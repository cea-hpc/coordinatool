{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "507a5489_65acce99",
        "filename": "copytool/protocol.c",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-10T12:20:16Z",
      "side": 1,
      "message": "nit1: this seems like an error rather than just a warning\nnit2: to make the log a bit more explicit, maybe you can add \"Refusing recv request, update client configuration\"",
      "range": {
        "startLine": 263,
        "startChar": 67,
        "endLine": 263,
        "endChar": 97
      },
      "revId": "90b32dafb61becb03000ea770efd3cd382807d5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3183b52f_3c02d8a3",
        "filename": "copytool/protocol.c",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2025-02-10T12:34:49Z",
      "side": 1,
      "message": "I think it\u0027s fine as a warning. We\u0027re rounding up, so in practice there\u0027ll always be a chance for each slot; e.g. if you have 3 slots and 5 max archives you\u0027ll get 2/2/1, if you have 3 slots and 2 max you\u0027ll get 1/1/0 (and finally process the last slots\u0027 requests if either first are idle), but it\u0027s not like you could expect 3 slots to be processed in parallel with such a limit anyway.\n\nAnd I think it\u0027s better to accept a client with a slightly sub-optimal value and process requests, rather than not process anything :)",
      "parentUuid": "507a5489_65acce99",
      "range": {
        "startLine": 263,
        "startChar": 67,
        "endLine": 263,
        "endChar": 97
      },
      "revId": "90b32dafb61becb03000ea770efd3cd382807d5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec0210d9_1faff973",
        "filename": "copytool/protocol.c",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-10T12:39:06Z",
      "side": 1,
      "message": "My bad. I saw the -EINVAL and interpreted it as \"we send an error to the client\". I should pay more attention when reading code...",
      "parentUuid": "3183b52f_3c02d8a3",
      "range": {
        "startLine": 263,
        "startChar": 67,
        "endLine": 263,
        "endChar": 97
      },
      "revId": "90b32dafb61becb03000ea770efd3cd382807d5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfba42fb_04b02ad5",
        "filename": "copytool/protocol.c",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2025-02-10T17:47:30Z",
      "side": 1,
      "message": "I think we should split LOG_WARN into LOG_WARN_ERRNO + LOG_WARN (without errno), this is annoying to use as well as being hard to understand (reading logs is odd as well as it always prints the errno message)...\nOTOH I\u0027m testing a rust rewrite right now, so if this works well enough we might no longer needed to bother with the llapi log interface so much :p",
      "parentUuid": "ec0210d9_1faff973",
      "range": {
        "startLine": 263,
        "startChar": 67,
        "endLine": 263,
        "endChar": 97
      },
      "revId": "90b32dafb61becb03000ea770efd3cd382807d5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}