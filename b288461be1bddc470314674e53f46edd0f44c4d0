{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "734e3282_0926b0b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-16T23:20:30Z",
      "side": 1,
      "message": "ah, sorry I\u0027ve added a similar commit recently for client recovery\nhttps://github.com/martinetd/coordinatool/commit/cdcc2194e88f73a219762cb6b3144cccef27495f\n\n\nI hadn\u0027t realized the repo had been cloned to cea-hpc, I\u0027m happy to send new patches to gerrithub from now, just need to decide what to do with this",
      "revId": "b288461be1bddc470314674e53f46edd0f44c4d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8187dd65_3c8e7dc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-09-17T06:59:19Z",
      "side": 1,
      "message": "As far as I understand, you\u0027ve added the hostname in ct_state.client_id in this patch. But this struct is related to client side code. This patch is for server side hostname handling. Am I wrong somewhere?",
      "parentUuid": "734e3282_0926b0b6",
      "revId": "b288461be1bddc470314674e53f46edd0f44c4d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4632b946_40ffcae8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-17T07:14:10Z",
      "side": 1,
      "message": "Yes, this patch just sets ct_state.client_id in the client, but the previous one(s) send the client_id to the server immediately after connect (new ehlo protocol message) -- I\u0027d much prefer using that for client-\u003ehost rather than sockaddr2str, and you can safely assert it has to be set in order for recv to work (just need to add ehlo for the cli client before it sends recv.. I didn\u0027t want it to trigger recovery mechanisms so it doesn\u0027t normally send one)\nThat\u0027ll avoid problems we can have with full network hostname on different interfaces (e.g. connecting over admin subnet but transfers over a data backbone), and that\u0027s why I didn\u0027t rely on sockaddr2str there. I didn\u0027t store it in the client struct because I had no immediate use for it outside of the ehlo reply handler, but that\u0027s trivial to add.\n\n(Note the addr should still be kept for logs, we\u0027ll want to at least match the two once for debug logs, then the addr can be freed eventually)\n\n\nI hadn\u0027t read this patch fully, the part with the coordinatool hostname can definitely be kept too, although I\u0027m not sure what it\u0027s used for? but that might make more sense after reading the other patch in detail.",
      "parentUuid": "8187dd65_3c8e7dc0",
      "revId": "b288461be1bddc470314674e53f46edd0f44c4d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b639c6fd_41b53f85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-09-17T07:25:36Z",
      "side": 1,
      "message": "The coordinatool hostname is necessary because of how the phobos_locate call works.\n\nIf it finds no suitable hostname to use, it will send back the current hostname. The assumption in the design of locate was that it would only be done on servers with an LRS and at least one drive thus capable of doing phobos operations. The use of it in the context of the coordinatool was not taken into account.\n\nKnowing the hostname of the coordinatool allows to make sure that we don\u0027t try to send remove or restore requests to the coordinatool\u0027s hostname as there is no phobos client there.",
      "parentUuid": "4632b946_40ffcae8",
      "revId": "b288461be1bddc470314674e53f46edd0f44c4d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d401be26_fe541ce8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-09-17T07:39:54Z",
      "side": 1,
      "message": "hm, I don\u0027t see why it\u0027s safe to assume the coordinatool won\u0027t run on a node with a phobos client (just as it was proven the assumption that there always is at least one drive wasn\u0027t correct either :D), but I won\u0027t comment on phobos high level logic as I don\u0027t know how its deployment is planned.\nI don\u0027t mind adding the info even if it\u0027s just for phobos, but that illustrates we\u0027ll need to think about having room for plugin data somewhere plugins can do whatever they want. A comment indicating what it\u0027s for would be appreciated so it can be cleaned up more easily laterâ„¢\n(also, it\u0027s not an lhsmd_coordinatool option, so it needs to be moved down the \u0027state\u0027 section of the state struct)\n\nFor the client hostname, what shall we do? If you are ok with my patches I\u0027ll just push them to the cea-hpc repo, stop using mine and start using gerrit from now on. If you want more discussions I\u0027ll push the patches to gerrit now.",
      "parentUuid": "b639c6fd_41b53f85",
      "revId": "b288461be1bddc470314674e53f46edd0f44c4d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77b85263_69c7cf27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-09-17T11:26:57Z",
      "side": 1,
      "message": "The main difference between assuming that the coordinatool\u0027s host can do phobos operations or not is that, in the first case, you will send requests to a client that will never execute them, whereas in the second one, you could send commands to the coordinatool\u0027s host but you don\u0027t. So you\u0027re not as efficient as you can be but at least it works.\n\nIf you want, I think I can implement this in a following patch using the ping feature which would try to contact the LRS and fail if it is not up. This could set a boolean option in the state struct and return true in can_send_to_client() if this ping failed. This ping could later be put in a library alongside locate.\nThis solution is not complete because there could be a LRS with no devices which I guess is an admin issue, not a developper one.\n\nAlso, after thinking about it, I think, if we want to support phobos we have to be able to do so dynamically because we don\u0027t know until runtime if a client will be a phobos one.\n\nSo I think we have to use a custom library for that and probably a new protocol message which would send the client\u0027s type (e.g. which library to use on the server side if necessary). It may be better to discuss it before removing phobos code at compile time (which I think can only be a temporary fix unfortunatly).",
      "parentUuid": "d401be26_fe541ce8",
      "revId": "b288461be1bddc470314674e53f46edd0f44c4d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}