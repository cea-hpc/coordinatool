{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1423b2a5_61be77f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-23T13:36:36Z",
      "side": 1,
      "message": "I\u0027ve rebased the patch on the current version of master to integrate the new handling of hostnames on the clients and the server. This should be the last version of the patch before landing on this branch unless some adjustments are required. I\u0027ve also abandoned the previous patches as they have been implemented on master.",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c5cf03a_3edf0132",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-12-07T14:07:19Z",
      "side": 1,
      "message": "I had to abandon this patch as there were conflicts between the phobos-integration branch and master. I\u0027ve merged this patch in a new branch called phobos which is now up to date with master.",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8979d2a1_bd4daa4e",
        "filename": "copytool/scheduler.c",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-05-28T07:57:03Z",
      "side": 1,
      "message": "we normally mount xfer agents with noatime, but for safety it\u0027s better to also set O_NOATIME here (noticed by comparing with llapi_hsm_action_begin, which uses O_RDONLY | O_NOATIME | O_NOFOLLOW | O_NONBLOCK -- O_NOFOLLOW can\u0027t hurt but probably doesn\u0027t matter here, and we don\u0027t care about O_NONBLOCK since we won\u0027t do IOs here)",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2f061f3_39c18ce3",
        "filename": "copytool/scheduler.c",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-05-30T07:41:14Z",
      "side": 1,
      "message": "I will add this to our todo list, thanks.",
      "parentUuid": "8979d2a1_bd4daa4e",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a69a50f6_474921d7",
        "filename": "copytool/scheduler.c",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-05-28T07:57:03Z",
      "side": 1,
      "message": "note: calling can_send_to_client does open+getxattr+phobos_locate which all are costly for each client in the list, we should cache the info...",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca45ca13_a8fd406f",
        "filename": "copytool/scheduler.c",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-05-30T07:41:14Z",
      "side": 1,
      "message": "We can cache the association between FID and object ID but phobos_locate is necessary each time (or at least each time a copytool finishes a request). We can probably do a better job than what I did. There is also a remark from Thomas who points out that the requeue is probably not very efficient either. The open+getxattr could be done when the request is first received.\n\nDo you intend to update the scheduling part of the coordinatool? I think I remember you saying that you wanted to implement more elaborate algorithms. Maybe we can think of a way to integrate phobos_locate in the scheduling in a more efficient way.\nAs well as how we can integrate Phobos in the Coordinatool in a less intrusive way.\n\nWe could recompute phobos_locate each time a copytool finishes a request because that\u0027s when the tapes are likely to be moved around. And we can maybe only recompute it for requests related to this copytool only (and probably for requests which are not yet bound to a particular client also which will probably be most of them unfortunately). Note that the locate feature may be extended to archives as well in the future.\n\nWe are in the process of improving Phobos\u0027s I/O scheduling capabilities and the Coordinatool will play an important role in the early stages as it will be the only component handling all the requests that Phobos will ultimately handle through the Copytools.",
      "parentUuid": "a69a50f6_474921d7",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5309bbfd_8203526f",
        "filename": "copytool/scheduler.c",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-05-30T08:02:11Z",
      "side": 1,
      "message": "Ideally we know which client we want to schedule this action with on the first phobos_locate: instead of redoing a lookup for every file for every client, we\u0027d want to do a lookup when we get the action and if the client has room assign it to the client immediately, otherwise queue it specifically for the client (and recheck phobos_locate before sending it at that point)\n\nThat\u0027d require a small architectural change but I don\u0027t think that\u0027d be impossible to accommodate.\n\n\nRe-other algorithms I have no plans right now, my focus is on restarting the server safely. That\u0027ll require some rework but I have no plan of changing the decision tree for this, it\u0027ll come on top of existing lists at this point.\nSince I\u0027ll be sending the json early to redis, I\u0027ll probably change the actual data in the lists though (keeping the archive id and json data), but I intend to keep or re-add whatever extra informations you need readily available as well (plans for scheduling included throttling users for example so if we\u0027re going to open the file we might as well get its owner uid at that point).\n\nI still really think we should merge phobos support as it\u0027ll get impossible to merge, but if we change the way we schedule requests that might be a better time...",
      "parentUuid": "ca45ca13_a8fd406f",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4182f974_34adb394",
        "filename": "copytool/scheduler.c",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-05-30T09:37:41Z",
      "side": 1,
      "message": "I see your point, that would be a lot better to do the lookup only once, yes. I can look what I can do to make the code a bit more efficient.\n\nRegarding merging with Phobos, I have no objections. It\u0027s just that you wanted something more modular. I was thinking of some sort of optional scheduling primitives that could be compiled with the server when phobos is available. Something like calling `can_send_to_client` which would return true for a non-phobos copytools and use phobos_locate otherwise.\nThis also gives me the idea that the client could tell us which type of copytool it is and we could use the Phobos version of `can_send_to_client` or not. This also raises the question of the type of request to consider when calling this function but the type of copytool might be enough to know this.\n\nDo you have a specific idea of what you would find acceptable? Maybe you just meant having some `#ifdef USE_PHOBOS` in the code? Although, I don\u0027t know if this would work well with Phobos copytools and regular ones. I didn\u0027t test this at the time.\n\nI should be able to rewrite this part of the code in the next few weeks so that you can review it.\n\nThere is also a patch which was landed on the phobos branch which made the coordinatool compatible with CentOS 7 because phobos was not available on CentOS 8 at the time but this issue is solved now so I think we can just drop it when merging.",
      "parentUuid": "5309bbfd_8203526f",
      "revId": "ad602df83b8559162e40b0b78720dd4301e0c64d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}